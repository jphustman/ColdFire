<project name="coldfire" default="make-docs-dist" basedir=".">
	<description>coldfire build file</description>
	<property name="src" location="src" />
	<property name="cfsrc" location ="src/coldfusion" />
	<property name="ffsrc" location ="src/firefox" />
	<property name="build" location="build" />
	<property name="cfbuild" location ="build/coldfusion" />
	<property name="ffbuild" location ="build/firefox" />
	<property name="geckosdk" location="C:/gecko-sdk" />
	<property name="dist" location="dist" />
	<xmlproperty file="src/firefox/install.rdf" />

	<!--
	 the name will be used to make the jars and should be the name used in the chrome.manifest file 
	-->
	<property name="name" value="${ant.project.name}" />
	<property name="extension-id" value="${RDF.Description.em:id}" />
	<property name="version" value="${RDF.Description.em:version}" />

	
	<!-- targets used for creating a distribution -->
	<target name="set-up-build" depends="clean" description="sets up build directory">
		<mkdir dir="${build}" />
	</target>

	<target name="build-coldfusion" depends="set-up-build" description="prepares coldfusion debug template for distribution">
		<mkdir dir="${cfbuild}" />
		<copy todir="${cfbuild}">
			<fileset dir="${cfsrc}" />
		</copy>
		<replace file="${cfbuild}/coldfire.cfm" token="@@Version@@" value="${version}" />
	</target>

	<target name="build-xpi-chrome" depends="build-coldfusion" description="create the xpi chrome contents including the chrome jar">
		<mkdir dir="${ffbuild}" />
		<mkdir dir="${ffbuild}/jar" />
		<mkdir dir="${ffbuild}/chrome" />

		<copy todir="${ffbuild}/jar">
			<fileset dir="${ffsrc}/chrome" includes="**/*" />
		</copy>
		
		<replace dir="${ffbuild}/jar" token="@@Version@@" value="${version}" />
		
		<zip destfile="${ffbuild}/chrome/${name}.jar">
			<zipfileset dir="${ffbuild}/jar" includes="**/*" />
		</zip>

		<delete dir="${ffbuild}/jar" />

	</target>

	<target name="build-xpi-components" depends="build-xpi-chrome" description="create the xpi components contents including the XPCOM interface">
		<mkdir dir="${ffbuild}/components" />
        
    	<exec dir="${ffsrc}/components" executable="${geckosdk}/bin/xpidl.exe"> 
        	<arg line="-m typelib -w -v -I ${geckosdk}/idl -e nsIColdFire.xpt nsIColdFire.idl"/>
    	</exec>  

		<copy todir="${ffbuild}/components">
			<fileset dir="${ffsrc}/components" excludes="**/*.idl" />
		</copy>		
		
	</target>

	<target name="build-xpi-defaults" depends="build-xpi-components" description="create the xpi defaults contents">
		<mkdir dir="${ffbuild}/defaults" />		

		<copy todir="${ffbuild}/defaults">
			<fileset dir="${ffsrc}/defaults" />
		</copy>
		
	</target>

	<target name="build-xpi" depends="build-xpi-defaults" description="create root xpi contents">
		
		<copy file="${ffsrc}/install.rdf" toDir="${ffbuild}" />
		<copy file="${ffsrc}/chrome.manifest" toDir="${ffbuild}" />
		<!--
 		Need to include the space because "chrome/" recursively matches (replace is stupid). 
		-->
		<replace file="${ffbuild}/chrome.manifest" token=" chrome/" value=" jar:chrome/${name}.jar!/" />	
	
	</target>

	<target name="set-up-dist" depends="build-xpi" description="sets up dist directory">
		<mkdir dir="${dist}" />
	</target>

	<target name="make-xpi-dist" depends="set-up-dist" description="generate the xpi for distribution">
		<zip destfile="${dist}/${name}_v${version}.xpi">
			<zipfileset dir="${ffbuild}/chrome" includes="${name}.jar" prefix="chrome" />
			<zipfileset dir="${ffbuild}/defaults" includes="**/*" prefix="defaults" />
			<zipfileset dir="${ffbuild}/components" includes="**/*" prefix="components" />
			<zipfileset dir="${ffbuild}" includes="install.rdf" />
			<zipfileset dir="${ffbuild}" includes="chrome.manifest" />
		</zip>
	</target>
	
	<target name="make-coldfuion-dist" depends="make-xpi-dist" description="copy the codfusion template for distribution">
		<copy todir="${dist}">
			<fileset dir="${cfbuild}" />
		</copy>
	</target>

	<target name="make-docs-dist" depends="make-coldfuion-dist" description="copy the docs for distribution">
		<copy todir="${dist}">
			<fileset dir="${src}/docs" />
		</copy>
	</target>

	<target name="clean" description="clean up">
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${build}" />
		<delete dir="${dist}" />
		<delete file="${ffsrc}/components/nsIColdFire.xpt" />
	</target>
</project>